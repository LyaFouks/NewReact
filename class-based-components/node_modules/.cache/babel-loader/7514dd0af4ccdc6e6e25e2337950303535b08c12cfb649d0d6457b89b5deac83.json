{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itssa\\\\Desktop\\\\NewReact\\\\class-based-components\\\\src\\\\components\\\\CustomerFilter.js\";\nimport { Fragment, Component } from \"react\";\nimport Customers from \"./Customers\";\nimport styles from \"./CustomerFilter.module.css\";\nimport CustomersContext from \"../store/customers-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomerFilter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredCustomers: [],\n      filter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // Отправить HTTP запрос...\n    this.setState({\n      filteredCustomers: this.context.customers\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.filter !== this.state.filter) {\n      this.setState({\n        filteredCustomers: this.context.customers.filter(customer => customer.name.includes(this.state.filter))\n      });\n    }\n  }\n\n  filterHandler(event) {\n    this.setState({\n      filter: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filter,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.filterHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Customers, {\n        customers: this.state.filteredCustomers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const CustomerFilter = () => {\n//   const [filteredCustomers, setFilteredCustomers] = useState(DUMMY_CUSTOMERS);\n//   const [filter, setFilter] = useState(\"\");\n//   useEffect(() => {\n//     setFilteredCustomers(\n//       DUMMY_CUSTOMERS.filter((customer) => customer.name.includes(filter))\n//     );\n//   }, [filter]);\n//   const filterHandler = (event) => {\n//     setFilter(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//       <div className={styles.filter}>\n//         <input type=\"search\" onChange={filterHandler} />\n//       </div>\n//       <Customers customers={filteredCustomers} />\n//     </Fragment>\n//   );\n// };\n\n\nCustomerFilter.cotextType = CustomersContext;\nexport default CustomerFilter;","map":{"version":3,"sources":["C:/Users/itssa/Desktop/NewReact/class-based-components/src/components/CustomerFilter.js"],"names":["Fragment","Component","Customers","styles","CustomersContext","CustomerFilter","constructor","state","filteredCustomers","filter","componentDidMount","setState","context","customers","componentDidUpdate","prevProps","prevState","customer","name","includes","filterHandler","event","target","value","render","bind","cotextType"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;;AAGA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAGrCK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,EADR;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,QAAL,CAAc;AACZH,MAAAA,iBAAiB,EAAE,KAAKI,OAAL,CAAaC;AADpB,KAAd;AAGD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACP,MAAV,KAAqB,KAAKF,KAAL,CAAWE,MAApC,EAA4C;AAC1C,WAAKE,QAAL,CAAc;AACZH,QAAAA,iBAAiB,EAAE,KAAKI,OAAL,CAAaC,SAAb,CAAuBJ,MAAvB,CAA+BQ,QAAD,IAC/CA,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuB,KAAKZ,KAAL,CAAWE,MAAlC,CADiB;AADP,OAAd;AAKD;AACF;;AAEDW,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,SAAKV,QAAL,CAAc;AACZF,MAAAA,MAAM,EAAEY,KAAK,CAACC,MAAN,CAAaC;AADT,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAErB,MAAM,CAACM,MAAvB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKW,aAAL,CAAmBK,IAAnB,CAAwB,IAAxB;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA5CoC,C,CA+CvC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAtEMH,c,CACGqB,U,GAAatB,gB;AAuEtB,eAAeC,cAAf","sourcesContent":["import { Fragment, Component } from \"react\";\r\nimport Customers from \"./Customers\";\r\nimport styles from \"./CustomerFilter.module.css\";\r\nimport CustomersContext from \"../store/customers-context\";\r\n\r\n\r\nclass CustomerFilter extends Component {\r\n  static cotextType = CustomersContext;\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      filteredCustomers: [],\r\n      filter: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Отправить HTTP запрос...\r\n    this.setState({\r\n      filteredCustomers: this.context.customers,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.filter !== this.state.filter) {\r\n      this.setState({\r\n        filteredCustomers: this.context.customers.filter((customer) =>\r\n          customer.name.includes(this.state.filter)\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  filterHandler(event) {\r\n    this.setState({\r\n      filter: event.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        \r\n        <div className={styles.filter}>\r\n          <input type=\"search\" onChange={this.filterHandler.bind(this)} />\r\n        </div>\r\n        <Customers customers={this.state.filteredCustomers} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// const CustomerFilter = () => {\r\n//   const [filteredCustomers, setFilteredCustomers] = useState(DUMMY_CUSTOMERS);\r\n//   const [filter, setFilter] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     setFilteredCustomers(\r\n//       DUMMY_CUSTOMERS.filter((customer) => customer.name.includes(filter))\r\n//     );\r\n//   }, [filter]);\r\n\r\n//   const filterHandler = (event) => {\r\n//     setFilter(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className={styles.filter}>\r\n//         <input type=\"search\" onChange={filterHandler} />\r\n//       </div>\r\n\r\n//       <Customers customers={filteredCustomers} />\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\nexport default CustomerFilter;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}