{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fouks\\\\Desktop\\\\NewReact\\\\effects-reducers-context-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 7\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [inputEmail, setInputEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined\n  });\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: undefined\n  }); // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //     setFormIsValid(\n  //       inputEmail.includes(\"@\") && inputPassword.trim().length > 7\n  //     );\n  //   }, 1000);\n  //   return () => {\n  //     clearTimeout(timer);\n  //   };\n  // }, [inputEmail, inputPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmailState({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    });\n    setFormIsValid(event.target.value.includes(\"@\") && inputPassword.trim().length > 7);\n  };\n\n  const passwordChangeHandler = event => {\n    setInputPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 7 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(inputPassword.trim().length > 7);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, inputPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${emailState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${passwordIsValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: inputPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: styles.btn,\n          disabled: !formIsValid,\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"9uTgxjPwTv3si2vW46n77hGMJUI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Fouks/Desktop/NewReact/effects-reducers-context-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","styles","Button","emailReducer","prevState","action","type","value","isValid","includes","passwordReducer","trim","length","Login","props","inputPassword","setInputPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmailState","undefined","passwordState","dispatchPasswordState","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\"),\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes(\"@\"),\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 7,\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7,\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n  // const [inputEmail, setInputEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n\n  // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //     setFormIsValid(\n  //       inputEmail.includes(\"@\") && inputPassword.trim().length > 7\n  //     );\n  //   }, 1000);\n\n  //   return () => {\n  //     clearTimeout(timer);\n  //   };\n  // }, [inputEmail, inputPassword]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmailState({ type: \"USER_INPUT\", value: event.target.value });\n    setFormIsValid(\n      event.target.value.includes(\"@\") && inputPassword.trim().length > 7\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setInputPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 7 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(inputPassword.trim().length > 7);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, inputPassword);\n  };\n\n  return (\n    <Card className={styles.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${styles.control} ${\n            emailState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${styles.control} ${\n            passwordIsValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={inputPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={styles.actions}>\n          <Button type=\"submit\" className={styles.btn} disabled={!formIsValid}>\n            Вход\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}